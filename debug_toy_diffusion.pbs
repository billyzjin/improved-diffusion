#!/bin/bash -l
#PBS -A Brownian_bandits
#PBS -l select=1:system=polaris
#PBS -l walltime=0:15:00
#PBS -l filesystems=home:eagle
#PBS -q debug
#PBS -N debug_toy_diffusion

echo "=========================================="
echo "DEBUG TOY DIFFUSION MODEL TEST"
echo "=========================================="
echo "Job ID: $PBS_JOBID"
echo "Host: $(hostname)"
echo "Date: $(date)"
echo "Working directory: $(pwd)"
echo "=========================================="

# Check if we're on a compute node
if [ -n "$PBS_NODEFILE" ]; then
    echo "Running on compute node(s):"
    cat $PBS_NODEFILE
    echo "Number of nodes: $(wc -l < $PBS_NODEFILE)"
else
    echo "ERROR: Running on login node - this shouldn't happen!"
    exit 1
fi

echo "=========================================="
echo "CHECKING MODULES"
echo "=========================================="

# Check available Python modules
echo "Available Python modules:"
module avail python 2>&1

echo "=========================================="
echo "LOADING PYTHON MODULE"
echo "=========================================="

# Try to load Python module
if module load cray-python/3.11.7 2>&1; then
    echo "Python module loaded successfully"
else
    echo "ERROR: Failed to load Python module"
    exit 1
fi

echo "Python version:"
python3 --version

echo "=========================================="
echo "CHECKING PYTHON PACKAGES"
echo "=========================================="

# Check if PyTorch is available
echo "Checking PyTorch installation..."
python3 -c "import sys; print(f'Python path: {sys.executable}')"
python3 -c "import sys; print(f'Python version: {sys.version}')"

# Try to import PyTorch
if python3 -c "import torch" 2>&1; then
    echo "PyTorch import successful"
    python3 -c "import torch; print(f'PyTorch version: {torch.__version__}')"
else
    echo "ERROR: PyTorch import failed"
    echo "Available packages:"
    python3 -m pip list 2>/dev/null || echo "pip list failed"
    exit 1
fi

echo "=========================================="
echo "RUNNING TOY DIFFUSION TEST"
echo "=========================================="

# Create and run the test
python3 << 'PYEOF'
import torch
import numpy as np
import time

print("Testing basic PyTorch functionality...")
print(f"PyTorch version: {torch.__version__}")
print(f"CUDA available: {torch.cuda.is_available()}")

if torch.cuda.is_available():
    print(f"CUDA device count: {torch.cuda.device_count()}")
    print(f"Current CUDA device: {torch.cuda.current_device()}")
    print(f"CUDA device name: {torch.cuda.get_device_name(0)}")

# Simple tensor operations
x = torch.randn(1000, 1000)
if torch.cuda.is_available():
    x = x.cuda()
    
start_time = time.time()
y = torch.matmul(x, x)
end_time = time.time()

print(f"Matrix multiplication time: {end_time - start_time:.4f} seconds")
print("Basic PyTorch test completed successfully!")
PYEOF

echo "=========================================="
echo "DEBUG TEST COMPLETED!"
echo "=========================================="
