#!/bin/bash -l
#PBS -A Brownian_bandits
#PBS -l select=1:system=polaris
#PBS -l walltime=0:15:00
#PBS -l filesystems=home:eagle
#PBS -q debug
#PBS -N toy_diffusion

echo "=========================================="
echo "TOY DIFFUSION MODEL TEST"
echo "=========================================="

# Load modules
echo "Loading modules..."
module load cray-python/3.11.7 || { echo "ERROR: Failed to load cray-python/3.11.7"; exit 1; }
module load cuda/12.6 || { echo "ERROR: Failed to load cuda/12.6"; exit 1; }
module load nvidia/24.11 || { echo "ERROR: Failed to load nvidia/24.11"; exit 1; }

# Activate PyTorch environment
echo "Activating PyTorch environment..."
source ~/pytorch_env/bin/activate || { echo "ERROR: Failed to activate PyTorch environment"; exit 1; }

# Create a simple Python test
cat > test_diffusion.py << 'PYEOF'
import torch
import numpy as np
import time

print("Testing basic PyTorch functionality...")
print(f"PyTorch version: {torch.__version__}")
print(f"CUDA available: {torch.cuda.is_available()}")

if torch.cuda.is_available():
    print(f"CUDA device count: {torch.cuda.device_count()}")
    print(f"Current CUDA device: {torch.cuda.current_device()}")
    print(f"CUDA device name: {torch.cuda.get_device_name(0)}")
    
    # Test GPU computation
    x = torch.randn(1000, 1000, device='cuda')
    start_time = time.time()
    y = torch.matmul(x, x)
    end_time = time.time()
    print(f"GPU matrix multiplication time: {end_time - start_time:.4f} seconds")
    print("PyTorch CUDA test completed successfully!")
else:
    print("CUDA not available, cannot run GPU test.")
    exit(1)
PYEOF

# Run the test
echo "Running PyTorch test..."
python3 test_diffusion.py || { echo "ERROR: PyTorch test failed!"; exit 1; }

echo "=========================================="
echo "TOY DIFFUSION TEST COMPLETED!"
echo "=========================================="
